//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18051
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ComCon.Client.Base.ServerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChatMessage", Namespace="http://schemas.datacontract.org/2004/07/ComCon.Shared.Classes")]
    [System.SerializableAttribute()]
    public partial class ChatMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServerService.IServerFunctions", CallbackContract=typeof(ComCon.Client.Base.ServerService.IServerFunctionsCallback))]
    public interface IServerFunctions {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerFunctions/ConnectToServer", ReplyAction="http://tempuri.org/IServerFunctions/ConnectToServerResponse")]
        void ConnectToServer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerFunctions/DisconnectFromServer", ReplyAction="http://tempuri.org/IServerFunctions/DisconnectFromServerResponse")]
        void DisconnectFromServer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerFunctions/Send", ReplyAction="http://tempuri.org/IServerFunctions/SendResponse")]
        void Send(ComCon.Client.Base.ServerService.ChatMessage cm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerFunctions/ConnectToChannel", ReplyAction="http://tempuri.org/IServerFunctions/ConnectToChannelResponse")]
        void ConnectToChannel();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerFunctions/DisconnectFromChannel", ReplyAction="http://tempuri.org/IServerFunctions/DisconnectFromChannelResponse")]
        void DisconnectFromChannel();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerFunctions/GetChannels", ReplyAction="http://tempuri.org/IServerFunctions/GetChannelsResponse")]
        string[] GetChannels();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerFunctionsCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerFunctions/ShowMessage")]
        void ShowMessage(string pMessage);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerFunctionsChannel : ComCon.Client.Base.ServerService.IServerFunctions, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServerFunctionsClient : System.ServiceModel.DuplexClientBase<ComCon.Client.Base.ServerService.IServerFunctions>, ComCon.Client.Base.ServerService.IServerFunctions {
        
        public ServerFunctionsClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServerFunctionsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServerFunctionsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServerFunctionsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServerFunctionsClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void ConnectToServer() {
            base.Channel.ConnectToServer();
        }
        
        public void DisconnectFromServer() {
            base.Channel.DisconnectFromServer();
        }
        
        public void Send(ComCon.Client.Base.ServerService.ChatMessage cm) {
            base.Channel.Send(cm);
        }
        
        public void ConnectToChannel() {
            base.Channel.ConnectToChannel();
        }
        
        public void DisconnectFromChannel() {
            base.Channel.DisconnectFromChannel();
        }
        
        public string[] GetChannels() {
            return base.Channel.GetChannels();
        }
    }
}
